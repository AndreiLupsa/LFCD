Language Specification:
 Language Definition:
  Alphabet:
      a. Upper (A-Z) and lower case letters (a-z) of the English alphabet
      b. Underline character '_'
      c. Decimal digits (0-9)
  Lexic:
      a.Special symbols, representing:
         - operators:
		    arithmetic: +, -, *, /, %
		    assignment: <==
            equality testing: =, !=
            increment and decrement: ++, --
            order relations: <, <=, >, >=
		    sequencing: ,
         - separators [ ] { } :
         - reserved words:
      	break -> opreste
		char -> caracter
		const -> constant
		do -> executa 
		else -> atunci
		for -> pentru
		printf -> afiseaza
		if -> daca
		int -> intreg
		long -> mare
		return -> intoarce
		short -> mic
		void -> nimic
		while -> cat
      b.identifiers
        -a sequence of letters and digits, such that the first charater is a letter; the rule is:
            identifier = ["_"]["_"]letter[{letter | digit}]
            letter = "A" | "B" | . ..| "Z" | "a" | "b" | ... | "z"
            digit="0"|...|"9"
      c.constants
         1.intreg:
            non_zero_digit = "1" |...| "9"
            zero_digit = "0" 
            sign = ["+" | "-"]
            intreg = zero_digit | sign digit {(zero_digit | digit)}
         2.caracter:
             caracter = 'letter'|'digit'
         3.array:
	    array = "[" [intreg|caracter]  "]" |  "[" intreg|caracter {"," intreg|caracter}  "]"
        ]
         
b) lexical rules:
 IDENTIFIER = letter | letter{letter|digit}
     letter = "A" | "B" |...| "Z" | "a" | "b" | ... | "z"
      digit = "0" | "1" |...| "9"
   RELATION = "<" | "<=" | "=" | "nu" | ">=" | ">" | "si" | "sau" 
   TAB = "    "
   /n=endline







